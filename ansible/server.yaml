### Dependencies Role: install_docker ###
- name: Install and configure Docker on Ubuntu
  hosts: web
  become: yes
  tasks:
    - name: Update package cache and upgrade system
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install prerequisite packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Create Docker GPG key directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Add Docker's official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set architecture mapping
      set_fact:
        docker_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: docker
        state: present
        update_cache: yes

    - name: Install Docker components
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes


### Deployment Role: deploy_app ###
- name: Deploy application
  hosts: web
  become: yes
  tasks:
    - name: Clone application repository
      ansible.builtin.git:
        repo: "https://github.com/oyogbeche/DevOps-Stage-4.git"
        dest: "/opt/app"
        version: main

    - name: Copy Traefik configuration file (if needed)
      ansible.builtin.copy:
        src: "./traefik.yml"
        dest: "/etc/traefik/traefik.yml"

    - name: Start application using Docker Compose
      command: docker-compose up -d
      args:
        chdir: /opt/app

    - name: Configure domain and SSL certificates
      ansible.builtin.copy:
        src: "certs/"
        dest: "/opt/app/certs/"

    - name: Ensure HTTP to HTTPS redirection is set
      lineinfile:
        path: /etc/traefik/traefik.yml
        line: "    redirectToHttps: true"
        create: yes

    - name: Restart application services
      command: docker-compose restart
      args:
        chdir: /opt/app
